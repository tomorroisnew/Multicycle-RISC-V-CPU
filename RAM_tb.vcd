$date
	Sat Sep 14 23:35:37 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module RAM_tb $end
$var wire 32 ! memReadData [31:0] $end
$var reg 4 " byteMask [3:0] $end
$var reg 1 # clk $end
$var reg 32 $ memAddress [31:0] $end
$var reg 1 % memWrite $end
$var reg 32 & memWriteData [31:0] $end
$var reg 1 ' reset $end
$scope module uut $end
$var wire 4 ( byteMask [3:0] $end
$var wire 1 # clk $end
$var wire 32 ) memAddress [31:0] $end
$var wire 1 % memWrite $end
$var wire 32 * memWriteData [31:0] $end
$var wire 1 ' reset $end
$var wire 32 + readDataOut2 [31:0] $end
$var wire 32 , readDataOut1 [31:0] $end
$var reg 4 - MASKWREN1 [3:0] $end
$var reg 4 . MASKWREN2 [3:0] $end
$var reg 1 / chipSelect1 $end
$var reg 1 0 chipSelect2 $end
$var reg 32 1 memAddress2 [31:0] $end
$var reg 32 2 memReadData [31:0] $end
$scope module SPRAM00 $end
$var wire 14 3 ADDRESS [13:0] $end
$var wire 1 / CHIPSELECT $end
$var wire 1 # CLOCK $end
$var wire 16 4 DATAIN [15:0] $end
$var wire 4 5 MASKWREN [3:0] $end
$var wire 1 6 POWEROFF $end
$var wire 1 7 SLEEP $end
$var wire 1 8 STANDBY $end
$var wire 1 % WREN $end
$var wire 1 9 off $end
$var reg 16 : DATAOUT [15:0] $end
$var integer 32 ; i [31:0] $end
$upscope $end
$scope module SPRAM01 $end
$var wire 14 < ADDRESS [13:0] $end
$var wire 1 / CHIPSELECT $end
$var wire 1 # CLOCK $end
$var wire 16 = DATAIN [15:0] $end
$var wire 4 > MASKWREN [3:0] $end
$var wire 1 ? POWEROFF $end
$var wire 1 @ SLEEP $end
$var wire 1 A STANDBY $end
$var wire 1 % WREN $end
$var wire 1 B off $end
$var reg 16 C DATAOUT [15:0] $end
$var integer 32 D i [31:0] $end
$upscope $end
$scope module SPRAM10 $end
$var wire 14 E ADDRESS [13:0] $end
$var wire 1 0 CHIPSELECT $end
$var wire 1 # CLOCK $end
$var wire 16 F DATAIN [15:0] $end
$var wire 4 G MASKWREN [3:0] $end
$var wire 1 H POWEROFF $end
$var wire 1 I SLEEP $end
$var wire 1 J STANDBY $end
$var wire 1 % WREN $end
$var wire 1 K off $end
$var reg 16 L DATAOUT [15:0] $end
$var integer 32 M i [31:0] $end
$upscope $end
$scope module SPRAM11 $end
$var wire 14 N ADDRESS [13:0] $end
$var wire 1 0 CHIPSELECT $end
$var wire 1 # CLOCK $end
$var wire 16 O DATAIN [15:0] $end
$var wire 4 P MASKWREN [3:0] $end
$var wire 1 Q POWEROFF $end
$var wire 1 R SLEEP $end
$var wire 1 S STANDBY $end
$var wire 1 % WREN $end
$var wire 1 T off $end
$var reg 16 U DATAOUT [15:0] $end
$var integer 32 V i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx V
bx U
xT
zS
zR
zQ
b1111 P
b0 O
b1 N
bx M
bx L
xK
zJ
zI
zH
b1111 G
b0 F
b1 E
bx D
bx C
xB
zA
z@
z?
b1111 >
b0 =
b0 <
bx ;
bx :
x9
z8
z7
z6
b1111 5
b0 4
b0 3
bx 2
b11111111111111111100000000000001 1
00
1/
b1111 .
b1111 -
bx ,
bx +
b0 *
b0 )
b0 (
1'
b0 &
0%
b0 $
0#
b0 "
bx !
$end
#5000000000000
1#
#10000000000000
0#
0'
#15000000000000
1#
#20000000000000
b1101111010101101 4
b1011111011101111 =
b1101111010101101 F
b1011111011101111 O
0#
1%
b1111 "
b1111 (
b11011110101011011011111011101111 &
b11011110101011011011111011101111 *
#25000000000000
1#
#30000000000000
0#
0%
#35000000000000
b11011110101011011011111011101111 !
b11011110101011011011111011101111 2
b1101111010101101 :
b11011110101011011011111011101111 ,
b1011111011101111 C
1#
#40000000000000
0#
#45000000000000
1#
#50000000000000
0#
#55000000000000
1#
#60000000000000
b0 -
b0 5
b0 G
b1100101011111110 4
b1011101010111110 =
b1100101011111110 F
b1011101010111110 O
b1 1
bx !
bx 2
10
0/
0#
1%
b11 "
b11 (
b11001010111111101011101010111110 &
b11001010111111101011101010111110 *
b100000000000000 $
b100000000000000 )
#65000000000000
1#
#70000000000000
0#
0%
#75000000000000
bx1011101010111110 !
bx1011101010111110 2
bx1011101010111110 +
b1011101010111110 U
1#
#80000000000000
0#
#85000000000000
1#
#90000000000000
0#
#95000000000000
1#
#100000000000000
b11 .
b11 >
b11 P
b1001000110100 4
b101011001111000 =
b1001000110100 F
b101011001111000 O
b100000000000001 1
0#
1%
b1 "
b1 (
b10010001101000101011001111000 &
b10010001101000101011001111000 *
b1000000000000000 $
b1000000000000000 )
#105000000000000
bx !
bx 2
bx +
bx U
1#
#110000000000000
0#
0%
#115000000000000
bx1011101001111000 !
bx1011101001111000 2
bx1011101001111000 +
b1011101001111000 U
1#
#120000000000000
0#
#125000000000000
1#
#130000000000000
0#
#135000000000000
1#
#140000000000000
b1111 .
b1111 >
b1111 P
b1111 -
b1111 5
b1111 G
b1000011101100101 4
b100001100100001 =
b1000011101100101 F
b100001100100001 O
b1000000000000001 1
0#
1%
b1100 "
b1100 (
b10000111011001010100001100100001 &
b10000111011001010100001100100001 *
b1100000000000000 $
b1100000000000000 )
#145000000000000
bx !
bx 2
bx +
bx U
1#
#150000000000000
0#
0%
#155000000000000
b10000111011001010100001100100001 !
b10000111011001010100001100100001 2
b1000011101100101 L
b10000111011001010100001100100001 +
b100001100100001 U
1#
#160000000000000
0#
#165000000000000
1#
#170000000000000
0#
#175000000000000
1#
#180000000000000
b1010101010111011 4
b1100110011011101 =
b1010101010111011 F
b1100110011011101 O
b1100000000000001 1
0#
1%
b110 "
b110 (
b10101010101110111100110011011101 &
b10101010101110111100110011011101 *
b10000000000000000 $
b10000000000000000 )
#185000000000000
bx !
bx 2
bx L
bx +
bx U
1#
#190000000000000
0#
0%
#195000000000000
b10101010101110111100110011011101 !
b10101010101110111100110011011101 2
b1010101010111011 L
b10101010101110111100110011011101 +
b1100110011011101 U
1#
#200000000000000
0#
#205000000000000
1#
#210000000000000
0#
#215000000000000
1#
#220000000000000
0#
#225000000000000
1#
#230000000000000
0#
#235000000000000
1#
#240000000000000
0#
#245000000000000
1#
#250000000000000
0#
#255000000000000
1#
#260000000000000
0#
